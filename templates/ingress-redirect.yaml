{{- if .Values.ingress.enabled -}}
{{- $fullName := include "faros-ai.fullname" . -}}
{{- $albRedirectToBackend := "redirect-to-app" }}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}-rewrite
  labels:
    {{- include "faros-ai.labels" . | nindent 4 }}
  annotations:
  {{- $redirectToPathPrefix := printf "%s/api" .Values.alastor.basePath }}
  {{- if eq .Values.ingress.className "nginx" }}
    nginx.ingress.kubernetes.io/permanent-redirect: "{{.Values.global.faros.appUri}}{{ $redirectToPathPrefix }}$request_uri"
  {{- else if eq .Values.ingress.className "alb" }}
    {{- $appDomain := (split ":" (urlParse .Values.global.faros.appUri).host)._0 }}
    {{- $port := .Values.global.ingress.alb.port }}
    {{- $scheme := .Values.global.ingress.scheme }}
    alb.ingress.kubernetes.io/group.name: "{{ .Values.global.ingress.alb.groupName }}"
    alb.ingress.kubernetes.io/load-balancer-name: "{{ .Values.global.ingress.alb.groupName }}"
    alb.ingress.kubernetes.io/listen-ports: {{ printf "[{\"%s\": %s}]" $scheme $port | quote }}
    alb.ingress.kubernetes.io/actions.{{ $albRedirectToBackend }}: >
      {"Type":"redirect","RedirectConfig":{"Host":"{{ $appDomain }}","Path":"{{ $redirectToPathPrefix }}#{path}","Port":"{{ $port }}","Protocol":"{{ $scheme }}","Query":"#{query}","StatusCode":"HTTP_301"}}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- $apiDomain := (split ":" (urlParse .Values.global.faros.apiUri).host)._0 }}
    - host: {{ required "global.faros.apiUri value is empty or not defiend" $apiDomain }}
      http:
        paths:
        # REDIRECT (301)
        # https://api.faros.ai/metabase/dynamic-dashboard to https://app.faros.ai/api/metabase/dynamic-dashboard
          - path: "/metabase/dynamic-dashboard"
            pathType: Prefix
            backend:
              service:
              {{- if eq .Values.ingress.className "nginx" }}
                name: {{ template "alastor.fullname" .Subcharts.alastor }}
                port:
                  name: http
              {{- else if eq .Values.ingress.className "alb" }}
                name: {{ $albRedirectToBackend }}
                port: 
                  name: use-annotation
            {{- end }}
{{- end }}
