apiVersion: v1
kind: Secret
metadata:
  name: {{ include "hasura.fullname" . }}
  labels:
    {{- include "hasura.labels" . | nindent 4 }}
type: Opaque
stringData:
  {{- $dbHost := .Values.externalDb.host }}
  {{- $dbPort := .Values.externalDb.port }}
  {{- $dbName := .Values.externalDb.database }}
  {{- $dbUsername := .Values.externalDb.username }}
  {{- $dbPassword := .Values.externalDb.password }}
{{- if and .Values.externalDb.passwordSecret.namespace .Values.externalDb.passwordSecret.name .Values.externalDb.passwordSecret.key }}
  {{- $secret := lookup "v1" "Secret" .Values.externalDb.passwordSecret.namespace .Values.externalDb.passwordSecret.name }}
  {{- $dbPassword = index $secret.data .Values.externalDb.passwordSecret.key | b64dec }}
{{- end }}
  {{- if .Values.hasuraDb.enabled }}
    {{- $dbHost = printf "%s-%s.%s.svc" .Release.Name .Values.dbName .Release.Namespace }}
    {{- $dbPort = .Values.global.postgresql.service.ports.postgresql }}
    {{- $dbName = .Values.hasuraDb.auth.database }}
    {{- $dbUsername = .Values.hasuraDb.auth.username }}
    {{- $dbPassword = .Values.hasuraDb.auth.password }}
  {{- end }}
  HASURA_GRAPHQL_DATABASE_URL: "postgres://{{ $dbUsername }}:{{ $dbPassword }}@{{ $dbHost }}:{{ $dbPort }}/{{ $dbName }}?options=-c%20statement_timeout%3D{{ .Values.global.hasura.statementTimeout }}"
{{- if not .Release.IsUpgrade }}
  HASURA_GRAPHQL_ADMIN_SECRET: {{ randAlphaNum 20 }}
{{- else }}
  {{- $fullName := include "hasura.fullname" . }}
  {{- $secret := lookup "v1" "Secret" .Release.Namespace $fullName }}
  HASURA_GRAPHQL_ADMIN_SECRET: {{ $secret.data.HASURA_GRAPHQL_ADMIN_SECRET | b64dec | quote }}
{{- end }}
