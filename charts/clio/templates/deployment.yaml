apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "clio.fullname" . }}
  labels:
    {{- include "clio.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "clio.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "clio.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "clio.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            # We add this env var only to reference in other env vars
            - name: FAROS_INTERNAL_API_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-poseidon
                  key: FAROS_INTERNAL_API_URL
            - name: CLIO_CREATE_GRAPH_VIEW_ASYNC
              value: "true"
            - name: CLIO_DATABASE_STATEMENT_TIMEOUT
              value: "240 seconds"
            - name: CLIO_GW_REMOTE_OAS
              value: "$(FAROS_INTERNAL_API_URL){{ .Values.global.poseidon.oasPath }},$(FAROS_INTERNAL_API_URL){{ .Values.global.aion.oasPath }}"
            - name: CLIO_GRAPH_LIMIT
              value: '{"default": {{ .Values.defaultGraphLimit }} }'
            - name: CLIO_MAX_VIEW_AGE
              value: "300 seconds"
            - name: CLIO_PORT
              value: {{ .Values.service.port | quote }}
            - name: FAROS_AUTH_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-poseidon
                  key: FAROS_AUTH_URL
            - name: FAROS_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-poseidon
                  key: FAROS_ROOT_USER
            - name: HASURA_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-hasura
                  key: HASURA_URL
            - name: HASURA_GRAPHQL_ADMIN_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-hasura
                  key: HASURA_GRAPHQL_ADMIN_SECRET
            - name: LOG_LEVEL
              value: "debug"
            - name: NODE_ENV
              value: "production"
            - name: FAROS_NODE_OPTIONS
              value: {{ include "faros-ai.farosNodeOptions" . | quote }}
            - name: DD_SERVICE
              value: {{ include "clio.name" . }}
            {{- include "faros-ai.datadog.baseEnvVars" . | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.global.imageRegistry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
