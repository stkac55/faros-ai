# Default values for poseidon.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

rootLogLevel: DEBUG

airbyteConfigs:
  mountPath: "/etc/airbyte"
  mountFileName: "connectors-configs.zip"
  dockerRepo: ""
  username: "NOT_DEFINED"
  password: ""
  webhookId: ""

localSyncLogsBucket: ""

# Private/public STS JWT keys
stsJwt:
  # Either specify the file names or the keys
  privateKeyFile: "sts-jwt-private-key.pem"
  publicKeyFile: "sts-jwt-public-key.pem"
  privateKey: ""
  publicKey: ""

global:
  faros:
    awsRegion: NOT_DEFINED
  poseidon:
    # Value of vault token can either be the token itself (starts with "hvs." or "hvb." prefix ) or a path to file where the token is stored
    # when not using vault, set it to a value that starts with "hvs." prefix
    vaultToken: "hvs.not_defined"
    vaultValidateCert: "true"
  postgresql:
    service:
      ports:
        postgresql: "5432"


replicaCount: 1

image:
  repository: farosai/poseidon
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1d79501a43e7954530632143817ce05aa7a236a8"

imagePullSecrets:
- name: dockerhub
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
  - host: poseidon.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

dbName: &dbName poseidon-db
poseidonDb:
  enabled: true # When set to false, values for externalDb are used and must be set
  nameOverride: *dbName
  image:
    tag: "14.7.0" # Postgres DB version
  auth:
    enablePostgresUser: true   # Creates "postgres" admin user
    postgresPassword: admin
    username: poseidon
    password: poseidon
    database: poseidondb
  primary:
    podSecurityContext:
      enabled: false
    containerSecurityContext:
      enabled: false
  volumePermissions:
    enabled: true
  tls:
    enabled: true
    autoGenerated: true

externalDb:
  host:
  port: 5432
  database:
  username:
  password:
