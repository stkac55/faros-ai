apiVersion: v1
kind: Secret
metadata:
  name: {{ include "metabase.fullname" . }}
  labels:
    {{- include "metabase.labels" . | nindent 4 }}
type: Opaque
stringData:
{{- if not .Release.IsUpgrade }}
  # The MB_ENCRYPTION_SECRET_KEY random string should be base64 encoded. 
  MB_ENCRYPTION_SECRET_KEY: {{ randAlphaNum 64 | b64enc }}
  MB_EMBEDDING_SECRET_KEY: {{ randAlphaNum 64 }}
  MB_JWT_SHARED_SECRET: {{ randAlphaNum 64 | quote }}
  # For v48, premum embedding token is used as a random alphanumeric string
  MB_PREMIUM_EMBEDDING_TOKEN: {{ randAlphaNum 64 | sha256sum }}
{{- else }}
  {{- $fullName := include "metabase.fullname" . }}
  {{- $secret := lookup "v1" "Secret" .Release.Namespace $fullName }}
  MB_ENCRYPTION_SECRET_KEY: {{ $secret.data.MB_ENCRYPTION_SECRET_KEY | b64dec | quote }}
  MB_EMBEDDING_SECRET_KEY: {{ $secret.data.MB_EMBEDDING_SECRET_KEY | b64dec | quote }}
  MB_JWT_SHARED_SECRET: {{ $secret.data.MB_JWT_SHARED_SECRET | b64dec | quote }}
  MB_PREMIUM_EMBEDDING_TOKEN: {{ $secret.data.MB_PREMIUM_EMBEDDING_TOKEN | b64dec | quote }}
{{- end }}
  # Encrypted token is used by v46 images
  MB_ENCRYPTED_PREMIUM_EMBEDDING_TOKEN: {{ .Values.global.metabase.encryptedPremiumEmbeddingToken | quote }}
  # Variables for Metabase DB
  {{- $mbDbHost := .Values.externalMetabaseDb.host }}
  {{- $mbDbPort := .Values.externalMetabaseDb.port }}
  {{- $mbDbName := .Values.externalMetabaseDb.database }}
  {{- $mbDbUsername := .Values.externalMetabaseDb.username }}
  {{- $mbDbPassword := .Values.externalMetabaseDb.password }}
  {{- if .Values.metabaseDb.enabled }}
    {{- $mbDbHost = printf "%s-%s.%s.svc" .Release.Name .Values.dbName .Release.Namespace }}
    {{- $mbDbPort = .Values.global.postgresql.service.ports.postgresql }}
    {{- $mbDbName = .Values.metabaseDb.auth.database }}
    {{- $mbDbUsername = .Values.metabaseDb.auth.username }}
    {{- $mbDbPassword = .Values.metabaseDb.auth.password }}
  {{- end }}
  # Variables for Metrics DB
  {{- $metricsDbHost := .Values.externalMetricsDb.host }}
  {{- $metricsDbPort := .Values.externalMetricsDb.port }}
  {{- $metricsDbName := .Values.externalMetricsDb.database }}
  {{- $metricsDbUsername := .Values.externalMetricsDb.username }}
  {{- $metricsDbPassword := .Values.externalMetricsDb.password }}
  {{- if .Values.metricsDb.enabled }}
    {{- $metricsDbHost = printf "%s-%s.%s.svc" .Release.Name .Values.metricsDbName .Release.Namespace }}
    {{- $metricsDbPort = .Values.global.postgresql.service.ports.postgresql }}
    {{- $metricsDbName = .Values.metricsDb.auth.database }}
    {{- $metricsDbUsername = .Values.metricsDb.auth.username }}
    {{- $metricsDbPassword = .Values.metricsDb.auth.password }}
  {{- end }}
  {{- $metricsReadReplicaDbHost := $metricsDbHost }}
  {{- $metricsReadReplicaDbPort := $metricsDbPort }}
  {{- if .Values.externalMetricsReadReplicaDb.enabled }}
    {{- $metricsReadReplicaDbHost = .Values.externalMetricsReadReplicaDb.host }}
    {{- $metricsReadReplicaDbPort = .Values.externalMetricsReadReplicaDb.port }}
  {{- end }}

  MB_DB_HOST: {{ $mbDbHost | quote }}
  MB_DB_PORT: {{ $mbDbPort | quote }}
  MB_DB_DBNAME: {{ $mbDbName }}
  MB_DB_USER: {{ $mbDbUsername }}
  MB_DB_PASS: {{ $mbDbPassword | quote }}
  FAROS_METRICS_DB_USER: {{ $metricsDbUsername }}
  FAROS_METRICS_DB_PASS: {{ $metricsDbPassword | quote }}
  AION_REPORT_DATABASE_URL: "postgres://{{ $metricsDbUsername }}:{{ $metricsDbPassword }}@{{ $metricsDbHost }}:{{ $metricsDbPort }}/{{ $metricsDbName }}"
  AION_REPORT_DATABASE_READ_URL: "postgres://{{ $metricsDbUsername }}:{{ $metricsDbPassword }}@{{ $metricsReadReplicaDbHost }}:{{ $metricsReadReplicaDbPort }}/{{ $metricsDbName }}"
  METABASE_DATABASE_URL: "postgres://{{ $mbDbUsername }}:{{ $mbDbPassword }}@{{ $mbDbHost }}:{{ $mbDbPort }}/{{ $mbDbName }}"
  FAROS_METRICS_DB_HOST: {{ $metricsDbHost | quote }}
  FAROS_METRICS_DB_PORT: {{ $metricsDbPort | quote }}
  FAROS_METRICS_DBNAME: {{ $metricsDbName }}
  FAROS_METRICS_READ_DB_HOST: {{ $metricsReadReplicaDbHost | quote }}
  FAROS_METRICS_READ_DB_PORT: {{ $metricsReadReplicaDbPort | quote }}
